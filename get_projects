#!/usr/bin/env node
const path = require('path')
const fetch = require('isomorphic-unfetch')
const yaml = require('yaml')

;(async () => {
  const csv = await fetchText(
    'https://raw.githubusercontent.com/amchagas/okh-log/master/projects_okhs.csv'
  )
  let id = 0
  let projects = await Promise.all(
    csv
      .split('\n')
      .slice(1)
      .map(async (line, index) => {
        const [name, date, link] = line.split(',')
        if (link) {
          const text = await fetchText(link)
          const origin = path.dirname(link) + '/'
          try {
            return { id: index, origin, ...yaml.parse(text) }
          } catch (e) {
            console.warn('Error reading:', link)
          }
        }
      })
  )
  projects = projects.filter(x => x).map(makeAbsolute)
  projects = await Promise.all(projects.map(removeInvalid))
  console.log(JSON.stringify(projects, null, 2))
})()

function fetchText(url) {
  return fetch(url).then(r => r.text())
}

function makeAbsolute(project) {
  const origin = project.origin
  const docHome = project['documentation-home']
  project['documentation-home'] = new URL(docHome, origin).href
  let image = project.image
  if (image) {
    project.image = new URL(image, origin).href
  }
  return project
}

async function removeInvalid(project) {
  let image = project.image
  if (image) {
    const r = await fetch(image)
    if (r.status != 200 || !/^image\//.test(r.headers.get('Content-Type'))) {
      console.warn(`Can't read image: ${image}`)
      delete project.image
    }
  }
  return project
}
